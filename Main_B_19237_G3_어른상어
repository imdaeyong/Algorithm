package restart0827;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class Main_B_19237_G3_어른상어 {
	static int N,M,k;
	static int map[][][]; //y,x,0=shark/1=smell
	static int direction[][][]; //ymove,xmove,sharkNum
	static int dy[] = {-1,1,0,0};
	static int dx[] = {0,0,-1,1};	
	static Shark sharks[];
	static List<Integer> dieSharks = new ArrayList<Integer>();
	static int cnt;
	static class Shark {
		int y, x,d;
		public Shark(int y, int x,int d) {
			super();
			this.y = y;
			this.x = x;
			this.d = d;
		}
	}
	
	public static void main(String[] args) throws Exception {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(in.readLine());
		
		N =	parse(st.nextToken()); //맵 크기
		M =	parse(st.nextToken()); //상어 마릿수
		k =	parse(st.nextToken()); //냄새지속
		sharks = new Shark[M];
		map = new int[N][N][2];
		direction = new int[4][4][M];
		cnt=M;
		
		//맵 입력(N*N)
		for(int i=0; i<N; i++) {
			st = new StringTokenizer(in.readLine());
			for(int j=0; j<N; j++) {
				map[i][j][0] = parse(st.nextToken());
				if(map[i][j][0]>0) {
					map[i][j][1]=k;
					sharks[map[i][j][0]-1] = new Shark(i,j,0);
				}
			}
		}
		//상어별(M) 초기 방향 입력(1=위, 2=아래, 3=왼, 4=오)
		st = new StringTokenizer(in.readLine());
		for(int i=0; i<M;i++) {
			sharks[i].d = parse(st.nextToken())-1;
		}
		
		//상어별 방향 우선순위(4*4)
		for(int i=0; i<4;i++) {
			for(int j=0; j<4;j++) {
				st = new StringTokenizer(in.readLine());
				for(int s=0; s<M;s++) {
					direction[i][j][s] = parse(st.nextToken())-1;
				}
			}			
		}
		int t=0;
		while(++t<1000) {			
			if(cnt<=1) break;
			for(int i=0; i<N;i++) {
				for(int j=0; j<N;j++) {
					System.out.print(map[i][j][0]);
				}
				System.out.print(" ");
				for(int j=0; j<N;j++) {
					System.out.print(map[i][j][1]);
				}
				System.out.println();
			}
			
			//상어 이동
			for(int s=M-1; s>=0;s--) {
				move(s);		
			}
	
			//맵 변경,겹친 상어 제거/냄새 추가 및 제거
			smell();
		
			System.out.println(cnt);
		}
		
		System.out.println(t);
		
	}


	private static void smell() {		
		//맵에 상어 배치
		for(int s=M-1; s>=0; s--) {
			boolean flag = false;
			for(int die=0; die<dieSharks.size();die++) {
				if(s==dieSharks.get(die)) {
					flag=true;
				}
			}
			if(!flag) {
				//겹친 상어 제거
				if(map[sharks[s].y][sharks[s].x][0]!=0) {
					cnt--;
				}
				map[sharks[s].y][sharks[s].x][0]=s+1;
				
			
				//냄새 추가
				map[sharks[s].y][sharks[s].x][1]=k+1;
				
			}
		}
		//냄새 제거
		for(int i=0; i<N; i++) {
			for(int j=0; j<N; j++) {
				if(map[i][j][1]!=0)	map[i][j][1]-=1;
			}
		}
		
	}


	private static void move(int s) {		
		Shark shark= new Shark(sharks[s].y,sharks[s].x,sharks[s].d);	
		for(int i=0; i<4;i++) {
			shark.y+=dy[direction[i][shark.d][s]];
			shark.x+=dx[direction[i][shark.d][s]];
			if(shark.y<N && shark.x<N && shark.y>=0 && shark.x>=0) {
				if(map[shark.y][shark.x][1]==0) {					
					if(map[shark.y][shark.x][0]!=0) {
						dieSharks.add(map[shark.y][shark.x][0]);
					}					
					int temp = map[shark.y][shark.x][0];
					//상어 이전위치 초기화
					map[sharks[s].y][sharks[s].x][0] =0; 
					sharks[s].y=shark.y;
					sharks[s].x=shark.x;
					sharks[s].d=shark.d;
					map[sharks[s].y][sharks[s].x][0] = temp; 
				}
				return;//냄새 없는곳으로 갈때
			}
		}
		System.out.println(s+"번 상어새끼 길잃음");
		if(sharks[s].d==1) {
			sharks[s].d=2;
		}else if(sharks[s].d==2) {
			sharks[s].d=1;
		}else if(sharks[s].d==3) {
			sharks[s].d=4;
		}else {
			sharks[s].d=3;
		}
		sharks[s].y+=dy[sharks[s].d-1];
		sharks[s].x+=dx[sharks[s].d-1];
	}


	private static int parse(String s) {
		return Integer.parseInt(s);
	}	
}
